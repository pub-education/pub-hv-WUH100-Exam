/* 
This document is the main stylesheet and will be sectioned into common styles, header, main content, footer, and responsive/device dependent. 
*/
:root {
  --text-color: #1e272e;
  --text-faded: grey;
  --site-bg-color: whitesmoke;
  --content-bg-color: whitesmoke;
  --header-bg-color: #c6ecef;
  --footer-bg-color: #c6ecef;
  --nav-hover-color: #130f40;
}

/*
We specify our default font, font-size, font-weight, and text color that should be applied throughout the document.
*/
html {
  font-family: "MuseoSans_500", Verdana, Geneva, Tahoma, sans-serif;
  font-size: 14px;
  font-weight: 400;
  color: var(--text-color);
}
/* Here we set the width of the content area and make it reactive from the start. At 960px width and lower it will fill out the entire width down to 10px.
We also use box-shadow with offset x and y to zero and a blur radius of 3px to create a soft contour around the content area. We also wrap all our content in a flexbox, set the direction elements will be rendered in to a column instead of row that is the default. Then we tell it to start rendering them at the start of elements with the class content-wrapper.
*/
.content-wrapper {
  background-color: var(--content-bg-color);
  width: clamp(10px, 100%, 960px);
  box-shadow: 0px 0px 3px lightgrey;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
/*
  Here we set all header elements to use the font Bree Serif or Times New Roman, Times or as a last resort Browser default font for the serif type.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Bree Serif", "Times New Roman", Times, serif;
}

/* 
  This section sets the document default sizes for h1, h2, and h3 elements.
  We don't bother with h4, h5, and h6 since we are not going to use them on this occation. Otherwise they would have been set here too.
*/
h1 {
  font-size: 2rem;
}
h2 {
  font-size: 1.6rem;
}
h3 {
  font-size: 1.2rem;
}
hr {
  margin: 1rem;
}
/* 
  We are using flexbox here to make centering the entire content including header and footer horizonatly on the page and while we're at it we also set the background color that will be visible outside the width of the content section when the viewport width is greater than 960px.
*/
.page-wrapper {
  background-color: var(--site-bg-color);
  display: flex;
  justify-content: center;
}

/* ***** Header Section START ***** */
/*
Set up the containing element for the header as flexbox and give it a little padding, and a background color.
*/
header {
  background-color: var(--header-bg-color);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 1rem 2rem;
}
.logo {
  width: clamp(100px, 50%, 200px);
}
/* Using flexbox to vertically center the menu in the header */
.navigation {
  display: flex;
  align-items: center;
}
/* 
creating a smoother transition between the hovered and normal state and removing the underline on the link because I don't like it.
*/
.navigation a {
  text-decoration: none;
  color: var(--text-color);
  transition: color 700ms 20ms, font-weight 700ms 20ms;
}
.navigation a:hover {
  color: var(--nav-hover-color);
  font-weight: 700;
}
/* removing bullets from list element. */
.navigation ul {
  list-style: none;
}
/* using em instead of rem to target the actual font-size in the element not the page default, set in the html element in this case. */
.navigation ul li {
  display: inline;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

/* ***** Header Section END ***** */

/* ***** Main Section START ***** */
/*
  Using a radius of 50% of a square produces a circle which is what we want we hide the overflow and put a border around the image. Using the same variable in both width and height makes them change the same way, here we use vw for viewport width. We also want this to be displayed above the helo image hence the higher z-index.
*/
.card-image {
  border-radius: 50%;
  overflow: hidden;
  border: 0.7rem solid var(--site-bg-color);
  width: clamp(20px, calc(100vw / 3 * 0.6), calc(960px / 3 * 0.6));
  height: clamp(20px, calc(100vw / 3 * 0.6), calc(960px / 3 * 0.6));
  z-index: 100;
}

/*
  We set the top margin to a negative value to move the shadowed border up towards the middle of the rounded image as it is depicted in the model. We give the element some padding on all sides but the top.
*/
.card-text {
  margin-top: -5em;
  padding: 0 0.5rem 0.5rem 0.5rem;
}
/* Container for the three columns. */
.main-content {
  display: flex;
  justify-content: space-evenly;
}
.main-content section {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0px 0.5rem;
}
/* creates a smooth border around each card. */
.main-content section div {
  box-shadow: 0 0 3px lightgrey;
}
/* create a distance between the paragraphs in each card. */
.main-content section div p {
  margin-bottom: 0.5em;
}
/*
  Makes sure we have a distance between the image in the card and where the first line of tet appears. If this would haev been 0 the text would have partially been hidden underneath the image.
*/
.main-content section div p:first-child {
  margin-top: 8em;
}
/* remove margin-bottom for the last p element for estetical reasons. */
.main-content section div p:last-child {
  margin-bottom: 0px;
}
/* we set the position here to relative so that we can place the text section on top of the image. and we assing it a low z-index. We also use a negative bottom margin to enable the rounded images to cover parts of the lower area of the helo image.
*/
.main-helo {
  position: relative;
  margin-bottom: -3rem;
  z-index: 0;
}
/*
Set this positioning to absolute so we can move it on top of the helo image. We position it in the top and right corner of the containing div and sizing it so that it covers the right half of the container. We then use flexbox to center the content in x and y.
*/
.main-helo-text {
  position: absolute;
  top: 0px;
  right: 0px;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  width: clamp(10px, 50%, 50%);
}
/* 
We set a little larger font size align the text to the center and move it on top of the containing element. Then we make it somewhat transparent with the alpha value of the rgba value. We also give it rounded corners and make sure it will never be closer to the sides than 5% of the containing elements width.
*/
.main-helo-text p {
  padding: 1em 1em;
  font-size: 1.4rem;
  text-align: center;
  background-color: rgba(169, 196, 197, 0.6);
  border-radius: 2em;
  margin-left: 5%;
  margin-right: 5%;
}

/*
  We will use this bolder text for the cards abstract text.
*/
.text-abstract {
  font-weight: 700;
}
/* ***** Main Section END ***** */

/* ***** Footer Section START ***** */
/*
  Using flexbox for footer layout. Spaces elements evenly across the content section's bottom. Using padding to provide height and to vertically center content in the footer. Then we set the background color.
*/
footer {
  display: flex;
  justify-content: space-evenly;
  margin-top: 1rem;
  padding-top: 2rem;
  padding-bottom: 2rem;
  background-color: var(--footer-bg-color);
}
/*
Let's make the headings a little bolder only for visual effect.
*/
footer h3 {
  font-weight: 700;
}
/* 
  Remove the bullets for the list items just as we did in the navigation section and adding a little distance to each heading.
*/
footer ul {
  list-style: none;
  margin-top: 1rem;
}
/*
  Removing the default anchor element style and reset it to the same stile the rest of the text has in the footer. I think it looks nicer and I never really cared too much for the change of color on a elements anyhow. We're using the same styling here as we did in the menu. However, instead of writing it as a general rule for anchor elements we separate them so that we easily can make changes if that would become necessary in the future.
*/
footer a {
  text-decoration: none;
  color: var(--text-color);
  transition: color 700ms 20ms, font-weight 700ms 20ms;
}
font a:hover {
  color: var(--nav-hover-color);
  font-weight: 700;
}

/* ***** Footer Section END ***** */

/* ***** Media Section START ***** */
/*
  This break point was necessary since the main-helo-text soon will start to disappear underneath the third section image.
*/
@media screen and (max-width: 650px) {
  .main-helo-text p {
    font-size: 1rem;
  }
}
/*
  Our main breakpoint towards mobile devices.
*/
@media screen and (max-width: 600px) {
  /*
    Change the font size for the whole section and make the h3 element relative to the new local size instead of the document default size defined in the html directive.
  */
  footer {
    font-size: 12px;
  }
  footer h3 {
    font-size: 1.2em;
  }
  header {
    font-size: 12px;
  }
  /*
    Here we set the order in which the sections are displayed in the column. We also make sure that the second section, previous middle section now is at the top of the order as was requested. Then I chosed to put the first section last, not for any other reason than that I could.
  */
  .main-col-1 {
    order: 3;
  }
  .main-col-2 {
    order: 1;
  }
  .main-col-3 {
    order: 2;
  }
  /*
    We change the layout in the flexbox to column from row.
  */
  .main-content {
    flex-direction: column;
  }
  /*
    We make the gap between the image and the text in each section narrower.
  */
  .main-content section div p:first-child {
    margin-top: 5em;
  }
}
/*
  We make the menu a list so we can keep the size of the text which makes it easier to read.
*/
@media screen and (max-width: 550px) {
  .navigation ul li {
    display: list-item;
  }
}
/*
  The following is just changes of font sizes so that things don't break.
  In some cases you could have chosen a different approach with changing positions or directions of e.g. the footer displaying that as a column instead similar to the above change for the navigation.
*/
@media screen and (max-width: 470px) {
  header {
    font-size: 0.8rem;
  }
  footer {
    font-size: 0.8rem;
  }
  .main-helo-text p {
    font-size: 0.8rem;
  }
}
@media screen and (max-width: 400px) {
  footer {
    font-size: 0.6rem;
  }
  .main-helo-text p {
    font-size: 0.6rem;
  }
}
@media screen and (max-width: 340px) {
  .main-helo-text p {
    font-size: 0.5rem;
  }
}
